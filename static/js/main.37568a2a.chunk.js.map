{"version":3,"sources":["App.js","index.js"],"names":["App","useState","userChoice","setUserChoice","computerChoice","setComputerChoice","result","setResult","userScore","setUserScore","computerScore","setComputerScore","playerHand","document","querySelector","computerHand","userHandScr","setUserHandScr","computerHandScr","setComputerHandScr","message","setMessage","refresh","setRefresh","choices","userSelectionButtons","map","choice","index","onClick","handleClick","name","icon","value","generateComputerChoice","classList","add","style","animation","randomChoice","Math","floor","random","length","useEffect","timer","setTimeout","winner","className","previousScore","color","clearTimeout","src","alt","title","onAnimationEnd","Message","bottom","fontSize","Restart","target","rel","href","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.37568a2a.chunk.js","sourcesContent":["import \"./App.css\";\nimport { useEffect, useState } from \"react\";\n\nconst App = () => {\n  const [userChoice, setUserChoice] = useState(null);\n  const [computerChoice, setComputerChoice] = useState(null);\n  const [result, setResult] = useState(null);\n  const [userScore, setUserScore] = useState(0);\n  const [computerScore, setComputerScore] = useState(0);\n  const playerHand = document.querySelector(\".playerHand\");\n  const computerHand = document.querySelector(\".computerHand\");\n  const [userHandScr, setUserHandScr] = useState(\"\");\n  const [computerHandScr, setComputerHandScr] = useState(\"\");\n  const [message, setMessage] = useState(\"Click on 👊🏽✋🏽✌🏽 to start...\");\n  const [refresh, setRefresh] = useState(\"\");\n\n  const choices = [{\"icon\" : \"👊🏽\" , \"name\":\"rock\"}, {\"icon\":\"✋🏽\", \"name\":\"paper\"}, {\"icon\":\"✌🏽\", \"name\":\"scissors\"}];\n  // from this array we will make three buttons\n  const userSelectionButtons = choices.map((choice, index) =>\n    <button key={index} onClick={() => handleClick(choice.name)}>\n      {choice.icon}\n    </button>\n  );\n\n  // this is when the game start. we get handleClick value from selections button  (rock paper scissors) depending on user click\n  const handleClick = (value) => {\n    setMessage(\"\");\n    setRefresh(\"\");\n    setUserChoice(value);\n    generateComputerChoice();\n    setResult(\"\");\n    setComputerHandScr(\"./images/rock.png\");\n    setUserHandScr(\"./images/rock.png\");\n    playerHand.classList.add(\"scalable\");\n    computerHand.classList.add(\"scalable\");\n    playerHand.style.animation = \"shakePlayerHand 2s ease\";\n    computerHand.style.animation = \"shakeComputerHand 2s ease\";\n  };\n\n  // generating the computer choice\n  const generateComputerChoice = () => {\n    const randomChoice = Math.floor(Math.random() * choices.length);\n    setComputerChoice(choices[randomChoice].name);\n  };\n\n  // Restarting the game\n  const Restart = () => {\n    setRefresh(\"\");\n    setResult(\"\");\n    setMessage(\"New Round\");\n    const Message = document.querySelector(\".message\");\n    Message.style.bottom = \"30%\";\n    Message.style.fontSize = \"1.5rem\";\n    setComputerHandScr(\"./images/rock.png\");\n    setUserHandScr(\"./images/rock.png\");\n    setUserScore(0);\n    setComputerScore(0);\n  };\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      // compering user choice and computer choice to set the result and the score.\n      const winner = document.querySelector(\".winner\");\n      switch (userChoice + computerChoice) {\n        case \"scissorspaper\":\n        case \"rockscissors\":\n        case \"paperrock\":\n          setResult(\"YOU WIN 💪🏽 !     \");\n          setRefresh(<i className=\"fa fa-refresh\"></i>);\n          setUserScore((previousScore) => previousScore + 1);\n          winner.style.color = \"hsl(177, 58%, 22%)\";\n          break;\n        case \"paperscissors\":\n        case \"scissorsrock\":\n        case \"rockpaper\":\n          setResult(\"YOU LOSE 😏 !     \");\n          setRefresh(<i className=\"fa fa-refresh\"></i>);\n          setComputerScore((previousScore) => previousScore + 1);\n          winner.style.color = \"hsl(0, 47%, 32%)\";\n          break;\n        case \"rockrock\":\n        case \"paperpaper\":\n        case \"scissorsscissors\":\n          setResult(\"IT ' S A DRAW 👏🏽 !      \");\n          setRefresh(<i className=\"fa fa-refresh\"></i>);\n          winner.style.color = \"hsl(210, 18%, 30%)\";\n          break;\n        default:\n          setResult(\"\");\n          setRefresh(\"\");\n          setComputerScore(0);\n          setUserScore(0);\n      }\n      // changing the scr property of hands img depending on the user and computer choice\n      setComputerHandScr(`./images/${computerChoice}.png`);\n      setUserHandScr(`./images/${userChoice}.png`);\n    }, 2000);\n    return () => clearTimeout(timer);\n  }, [userChoice, computerChoice]);\n\n  return (\n    <div>\n      <h1>Rock - Paper - Scissors - React Game</h1>\n      <div className = \"game\">\n        <div className=\"scores\">\n          <h2>You : {userScore}</h2>\n          <h2>Computer : {computerScore}</h2>\n        </div>\n        <div className=\"hands\">\n          <img\n            className=\"playerHand\"\n            src={userHandScr}\n            alt=\"\"\n            title=\"Your Hand\"\n            onAnimationEnd={() => (playerHand.style.animation = \"\")}\n          />\n          <img\n            className=\"computerHand\"\n            src={computerHandScr}\n            alt=\"\"\n            title=\"Computer Hand\"\n            onAnimationEnd={() => (computerHand.style.animation = \"\")}\n          />\n        </div>\n        <h2 className=\"message\">{message}</h2>\n        <h2 className=\"winner\">\n          {result}\n          <span onClick={() => Restart()} title=\"Restart\">\n            {refresh}\n          </span>\n        </h2>\n        <div className=\"selections\">\n          {userSelectionButtons}\n          \n          {/* <button onClick={() => handleClick(\"rock\")}>👊🏽</button>\n          <button onClick={() => handleClick(\"paper\")}>✋🏽</button>\n          <button onClick={() => handleClick(\"scissors\")}>✌🏽</button> */}\n        </div>\n      </div>\n      <p className=\"githubIcon\">\n       Code on &nbsp;<a\n        target=\"_blank\" rel=\"noreferrer\"\n        href=\"https://github.com/alimadhibujar/Rock-Paper-Scissors-React-Game\"\n        ><i className=\"fa fa-github\" title=\"github\"></i>\n      </a>\n    </p>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}